/* static/src/input.css */

@tailwind base;
@tailwind components;
@tailwind utilities;

/* Custom Classes Here */

#current-device-container {
    max-width: calc(100vw - 16rem);
}

@media screen and (max-width: 576px) {
    #current-device-container {
        max-width: calc(100vw);
    }
}

/* STATUS INDICATOR */
.status-success {
    box-shadow: 0 0 32px 1px rgba(56, 208, 117, 0.5);
}
.status-warning {
    box-shadow: 0 0 32px 1px rgba(206, 124, 0, 0.5);
}
.status-danger {
    box-shadow: 0 0 32px 1px rgba(208, 56, 56, 0.5);
}

/* CARDS */
.card-blend-success, .card-blend-warning, .card-blend-danger, .stat-blend-success {
    background-blend-mode: screen;
}

.card-blend-success {
    background:
        radial-gradient(132px 112px ellipse at 72px 65px, rgba(90, 255, 107, 0.2) 0%, rgba(90, 255, 107, 0) 70%),
        radial-gradient(132px 112px ellipse at 131px 99px, rgba(108, 197, 175, 0.2) 0%, rgba(108, 197, 175, 0) 70%),
        radial-gradient(120px 100px ellipse at 90px 129px, rgba(224, 242, 200, 0.2) 0%, rgba(224, 242, 200, 0) 70%);
}

.card-blend-warning {
    background:
        radial-gradient(132px 112px ellipse at 72px 65px, rgba(255, 199, 90, 0.2) 0%, rgba(255, 199, 90, 0) 70%),
        radial-gradient(132px 112px ellipse at 131px 99px, rgba(197, 124, 108, 0.2) 0%, rgba(197, 124, 108, 0) 70%),
        radial-gradient(120px 100px ellipse at 90px 129px, rgba(236, 242, 200, 0.2) 0%, rgba(236, 242, 200, 0) 70%);
}

.card-blend-danger {
    background: 
        radial-gradient(132px 112px ellipse at 72px 65px, rgba(255, 90, 90, 0.2) 0%, rgba(255, 90, 90, 0) 70%),
        radial-gradient(132px 112px ellipse at 131px 99px, rgba(197, 108, 156, 0.2) 0%, rgba(197, 108, 156, 0) 70%),
        radial-gradient(120px 100px ellipse at 90px 129px, rgba(242, 223, 200, 0.2) 0%, rgba(242, 223, 200, 0) 70%);
}

.stat-blend-success {
    background: 
        radial-gradient(106px 90px ellipse at 80px 42px, rgba(90, 255, 107, 0.2) 0%, rgba(90, 255, 107, 0) 70%),
        radial-gradient(106px 91px ellipse at 98px 70px, rgba(108, 197, 175, 0.2) 0%, rgba(108, 197, 175, 0) 70%),
        radial-gradient(97px 81px ellipse at 73px 105px, rgba(224, 242, 200, 0.2) 0%, rgba(224, 242, 200, 0) 70%);
}

.stat-blend-warning {
    background: 
        radial-gradient(106px 90px ellipse at 80px 42px, rgba(255, 199, 90, 0.2) 0%, rgba(255, 199, 90, 0) 70%),
        radial-gradient(106px 91px ellipse at 98px 70px, rgba(197, 124, 108, 0.2) 0%, rgba(197, 124, 108, 0) 70%),
        radial-gradient(97px 81px ellipse at 73px 105px, rgba(236, 242, 200, 0.2) 0%, rgba(236, 242, 200, 0) 70%);
}

.stat-blend-danger {
    background: 
        radial-gradient(106px 90px ellipse at 80px 42px, rgba(255, 90, 90, 0.2) 0%, rgba(255, 90, 90, 0) 70%),
        radial-gradient(106px 91px ellipse at 98px 70px, rgba(197, 108, 156, 0.2) 0%, rgba(197, 108, 156, 0) 70%),
        radial-gradient(97px 81px ellipse at 73px 105px, rgba(242, 223, 200, 0.2) 0%, rgba(242, 223, 200, 0) 70%);
}

/* first card in a container for no left spacing */
.card-blend-success:first-child, .card-blend-warning:first-child, .card-blend-danger:first-child {
    margin-left: 0;
}

/* Custom Fonts */
/* FiraCode Medium */
@font-face {
    font-family: 'FiraCode';
    font-style: normal;
    font-weight: 500;
    src: url('/static/assets/FiraCode-Medium.ttf') format('truetype');
    font-display: swap;
}

.font-firacode {
    font-family: 'FiraCode';
}

/* Scrollbar */
::-webkit-scrollbar {
    width: 8px;
    height: 8px;
}
::-webkit-scrollbar-thumb {
    background: #9F9F9F;
    border-radius: 10px;
}
::-webkit-scrollbar-thumb:hover {
    background: #A1A1A1;
}

.scroll-x {
    overflow-x: auto;
}

.scroll-x::-webkit-scrollbar-thumb {
    background: transparent;
}

.scroll-x:hover::-webkit-scrollbar-thumb {
    background: #A1A1A1;
}

/* draggable scroll */
div[data-drag-scroll="true"] {
    cursor: grab;
    cursor: -moz-grab;
    cursor: -webkit-grab;
}

/* danger/urgent class */
.urgent {
    color: #FF00001A;
    background-color: #FF0000;
}

.urgent .urgent-stat {
    color: #FF0000;
    background-color: white;
}

/* pointer for inputs */
input[type="checkbox"], input[type="radio"] {
    cursor: pointer;
}
